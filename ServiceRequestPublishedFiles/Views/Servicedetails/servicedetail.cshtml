@model MarketingServiceRequests.Models.ServiceDetails

@{
    ViewBag.Title = "ServiceDetail";
}
<head>
    @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

    <style>
        #Sponsors_input {
            display: none;
        }

        #Approved_input {
            display: none;
        }
    </style>
    <script>

        $(document).ready(function () {
            $('input[type=submit]').prop("disabled", true);


            $("#Sponsors_link").on('click', function (e) {
                e.preventDefault();
                $("#Sponsors_input:hidden").trigger('click');

            });

            $("#approvedbudgetfrommanagement_link").on('click', function (e) {
                e.preventDefault();
                $("#Approved_input:hidden").trigger('click');
            });


            $('#Sponsors_input').change(function (e) {
                var FileName = e.target.files[0].name;
                $('#Sponsors_span').html(FileName);
            });
            $('#Approved_input').change(function (e) {
                var FileName = e.target.files[0].name;
                $('#Approved_span').html(FileName);
            });

            var chkboxes1 = $('.chkbox');
            var chkboxes2 = $('.chkcostctr');

            $('.chkbox').on('change', function () {
                $('.chkbox').not(this).prop('checked', false);

                if (chkboxes1.filter(':checked').length > 0) {
                    if (!chkboxes1.filter(':checked').length + !chkboxes2.filter(':checked').length == 0) {

                        if ($('#Sponsor').prop('checked') == true) {
                            if ($('#Sponsors_input')[0].files.length != 0) {
                                $('input[type=submit]').prop('disabled', false);
                            }
                            else { $('input[type=submit]').prop('disabled', true); }
                        }
                        if ($('#approvedbudget').prop('checked') == true) {
                            if ($('#Approved_input')[0].files.length != 0) {
                                $('input[type=submit]').prop('disabled', false);
                            }
                            else { $('input[type=submit]').prop('disabled', true); }
                        }


                    }
                } else { $('input[type=submit]').prop('disabled', true); }
            });

           

            $('.chkcostctr').on('change', function () {
                $('.chkcostctr').not(this).prop('checked', false);
                $('input[type="file"]').val('');
                $('#Sponsors_span').html('');
                $('#Approved_span').html('');
                $('input:submit').attr('disabled', true);
            });



            //$('input[type="checkbox"]').on('change', function () {
            //    $('input[type=submit]').prop('disabled', !chkboxes1.filter(':checked').length + !chkboxes2.filter(':checked').length);
            //}).trigger('change');


            $('input[type="file"]').change(function () {

                //because this is single file upload I use only first index
                var f = this.files[0]

                //33554432 32 mb 32*1024*1024
                if (f.size > 33554432) {
                    alert("Allowed file size exceeded. (Max. 32 MB)")
                    this.value = null;
                    var InputId = $(this).attr("id");
                    var SpanId = '#' + InputId.substring(0, InputId.length - 5) + 'span';
                    $(SpanId).html('');
                    //$('input:submit').attr('disabled', true);
                }

                if (!chkboxes1.filter(':checked').length + !chkboxes2.filter(':checked').length == 0) {
                    if ($('#Sponsor').prop('checked') == true) {
                        if ($('#Sponsors_input')[0].files.length != 0) {
                            $('input[type=submit]').prop('disabled', false);
                        }
                        else { $('input[type=submit]').prop('disabled', true); }
                    }
                    if ($('#approvedbudget').prop('checked') == true) {
                        if ($('#Approved_input')[0].files.length != 0) {
                            $('input[type=submit]').prop('disabled', false);
                        }
                        else { $('input[type=submit]').prop('disabled', true); }
                    }
                }

            });



        });
    </script>
</head>

@using (Html.BeginForm("servicedetail", "Servicedetails", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div style="background-color:#015FB9;margin:10px 0px 0px 0px;padding:20px 10px 20px 10px;color:white;font-weight:bold">
            <h2>Section Two / Service Details</h2>
        </div>
        <div class="form-group">
            <div class="col-md-4" style="padding:0px 0px 0px 20px;margin:0px 0px 0px 0px">
                @{
                    if (Session["UserName"] != null)
                    {
                        <h4> Welcome : @Session["UserName"] </h4>
                    }
                }
            </div>
            <div class="col-md-offset-7 col-md-1 pull-right" style="padding:7px 5px 0px 0px;">
                @Html.ActionLink("Logout", "LogOut", "Login")
            </div>
        </div>
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        <div class="form-group">
            <div class="col-md-2" style="float: left;">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2" style="float: left;">
                @Html.LabelFor(model => model.BusinessObjective, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.BusinessObjective, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BusinessObjective, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2" style="float: left;">
                @Html.LabelFor(model => model.DesiredLaunchDate, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DesiredLaunchDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesiredLaunchDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2" style="float: left; ">
                @Html.LabelFor(model => model.TargetAudience, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-10" style="padding-top:8px">
                <div>
                    @Html.CheckBox("Public", false, new { @class = "chkbox", })<span style="padding:0 15px 0 0px">Public</span>
                    @Html.CheckBox("IMCPatients", false, new { @class = "chkbox" }) <span style="padding:0 15px 0 0px"> IMC Patients </span>
                    @Html.CheckBox("IMCEmployees", false, new { @class = "chkbox" }) <span style="padding:0 15px 0 0px"> IMC Employees </span>
                    @Html.CheckBox("Manager", false, new { @class = "chkbox" })<span style="padding:0 15px 0 0px">Other</span>
                </div>

                @Html.ValidationMessageFor(model => model.TargetAudience, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="vertical-align:middle;">
            <div class="col-md-2" style="float: left;">
                @Html.LabelFor(model => model.CostCenter, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-10" style="padding-top:8px;">

                <div>
                    @Html.CheckBox("Sponsor", false, new { @class = "chkcostctr", })<span>Sponsors</span>
                    <input type="file" name="Sponsors" id="Sponsors_input" />
                    <a href="" id="Sponsors_link" style="padding:0 10px 0 10px"> (Attach Letters) </a>
                    <span id="Sponsors_span"></span>
                </div>

                @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="vertical-align:middle;">
            <div class="col-md-offset-2 col-md-10">
                @Html.CheckBox("approvedbudget", false, new { @class = "chkcostctr", })<span>Approved budget from management</span>
                <input type="file" name="approvedbudgetfrommanagement" id="Approved_input" />
                <a href="" id="approvedbudgetfrommanagement_link" style="padding:0 10px 0 10px"> (Attach Approval) </a>
                <span id="Approved_span"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-10 col-md-2">
                <input type="submit" value="Next" id="btnsubmit" class="btn" style="background-color:#015FB9;color:white;" />
            </div>
        </div>
    </div>
                    }
